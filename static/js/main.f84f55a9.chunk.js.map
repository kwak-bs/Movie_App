{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/About.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","length","slice","Home","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","medium_cover_image","React","Component","About","props","console","log","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f84f55a9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__date\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.length > 180 ? `${summary.slice(0, 180)}...` : summary}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n// props 타입 정의\r\n// propsTypes는 number, string, bool, func, node등 다양하게 존재한다.\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\n// export를 해줘야 다른 js에서 Movie라는 Componenet를 사용할 수 있다.\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    movie: [],\r\n  };\r\n\r\n  getMovies = async () => {\r\n    // data - data - movies에 접근 (변수도 movies로 접근 하면 잘 출력됨)\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    // API로 받아온 movies가 잘 출력됨.\r\n    //console.log(movies);\r\n\r\n    // 기존 state에 있는 moives 배열에 Axios로 가져온\r\n    // movies 배열 객체 넣어줌 ({movies : movies})\r\n    this.setState({ movies, isLoading: false });\r\n  };\r\n\r\n  // render 호출 후\r\n  componentDidMount() {\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      // section 태그는 내용적 흐름과 구조를 만들기 위해 내용을 나누는 용도.\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                id={movie.id}\r\n                key={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n              // 위와 같이 object를 풀어줄 때 map함수를 사용하고, 또\r\n              // jsx에서는 props를 통해서 값을 전달한다.\r\n              // key는 표현되지 않지만 필수 props이다.\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Steadily, Silently”\r\n      </span>\r\n      <span>- Kwak bs, 2021</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Detail.css\";\r\n\r\nclass Detail extends React.Component {\r\n  componentDidMount() {\r\n    const { location, history } = this.props;\r\n    // 클릭해서 들어오는 것이 아닌 검색해서 들어온다면\r\n    // 클릭을 안했으면 state는 undefined임.\r\n    if (location.state === undefined) {\r\n      // home으로 redirect\r\n      history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { location } = this.props;\r\n\r\n    // 클릭해서 들어오면 잘 보여주고\r\n    // 새로고침하면 다시 redirect\r\n    if (location.state) {\r\n      const { year, title, summary, poster, genres } = location.state;\r\n      //console.log(year, title, summary, poster, genres);\r\n      //console.log(summary.length);\r\n\r\n      return (\r\n        <div className=\"detail\">\r\n          <img src={poster} alt={title} title={title} />\r\n\r\n          <div className=\"detail__date\">\r\n            <h3 className=\"detail__title\">{title}</h3>\r\n            <h5 className=\"detail__year\">{year}</h5>\r\n            <ul className=\"detail__genres\">\r\n              {genres.map((genre, index) => (\r\n                <li key={index} className=\"detail__genre\">\r\n                  {genre}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <p className=\"detail__summary\">{summary}</p>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\n// a href 는 html이므로 홈페이지를 새로 고침 시킴\r\n// Link는 새로고침 안시킴\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\n\n//네비게이션은 라우터 안에 위치하고 있어야됨\n// HashRouter가 github page에 좀 더 잘 연동됨.\n// BrowserRouter는 github page에 설정하기 좀 짜증남.\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}