{"version":3,"sources":["routes/About.js","routes/Detail.jsx","components/Navigation.js","components/Movie.js","movieProvider.js","routes/Home.jsx","App.js","index.js"],"names":["About","props","console","log","className","Detail","location","history","useEffect","undefined","state","push","year","title","summary","poster","genres","src","alt","map","genre","index","Navigation","to","Movie","id","pathname","length","slice","MovieContext","createContext","isLoading","movies","MovieProvider","children","useState","setMovies","setIsLoading","a","axios","get","data","fetchMyAPI","value","Provider","Consumer","Home","useContext","Context","movie","medium_cover_image","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAeeA,MAZf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,mBAAf,UACE,kEAGA,uDCkCSC,G,MAzCA,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAa1B,GAJAC,qBARc,gBAGWC,IAAnBH,EAASI,OAEXH,EAAQI,KAAK,QAObL,EAASI,MAAO,CAAC,IAAD,EAC+BJ,EAASI,MAAlDE,EADU,EACVA,KAAMC,EADI,EACJA,MAAOC,EADH,EACGA,QAASC,EADZ,EACYA,OAAQC,EADpB,EACoBA,OAItC,OACE,sBAAKZ,UAAU,SAAf,UACE,qBAAKa,IAAKF,EAAQG,IAAKL,EAAOA,MAAOA,IAErC,sBAAKT,UAAU,eAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BS,IAC/B,oBAAIT,UAAU,eAAd,SAA8BQ,IAC9B,oBAAIR,UAAU,iBAAd,SACGY,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBjB,UAAU,gBAA1B,SACGgB,GADMC,QAKb,mBAAGjB,UAAU,kBAAb,SAAgCU,UAKtC,OAAO,O,MCzBIQ,MATf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,IAAD,CAAMmB,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uB,MCuCSC,MA5Cf,YAA8D,IAA7CC,EAA4C,EAA5CA,GAAIb,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OACE,qBAAKZ,UAAU,QAAf,SACE,eAAC,IAAD,CACEmB,GAAI,CACFG,SAAS,UAAD,OAAYD,GACpBf,MAAO,CACLE,OACAC,QACAC,UACAC,SACAC,WARN,UAYE,qBAAKC,IAAKF,EAAQG,IAAKL,EAAOA,MAAOA,IACrC,sBAAKT,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BS,IAC9B,oBAAIT,UAAU,cAAd,SAA6BQ,IAC7B,oBAAIR,UAAU,gBAAd,SACGY,EAAOG,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBjB,UAAU,gBAA1B,SACGgB,GADMC,QAKb,mBAAGjB,UAAU,iBAAb,SAA+BU,EAAQa,OAAS,IAAjB,UAA0Bb,EAAQc,MAAM,EAAG,KAA3C,OAAuDd,a,0DC5B1Fe,EAAeC,wBAAc,CACjCpB,MAAO,CACLqB,WAAW,EACXC,OAAQ,MAINC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACVC,mBAAS,IADC,mBAC/BH,EAD+B,KACvBI,EADuB,OAEJD,oBAAS,GAFL,mBAE/BJ,EAF+B,KAEpBM,EAFoB,KAKtC7B,qBAAU,WAAM,4CACd,8BAAA8B,EAAA,sEAMYC,IAAMC,IACd,yEAPJ,gBAIcR,EAJd,EAGIS,KACEA,KAAQT,OAOZK,GAAa,GACbD,EAAUJ,GAZZ,4CADc,uBAAC,WAAD,wBAedU,KACC,IAEH,IAAMC,EAAQ,CACZjC,MAAO,CAAEsB,SAAQD,cAEnB,OACE,cAACF,EAAae,SAAd,CAAuBD,MAAOA,EAA9B,SAAsCT,KAQ3BL,GAJqBA,EAA5BgB,SAIOhB,GCLAiB,EAlCF,WAAO,IACVpC,EAAUqC,qBAAWC,GAArBtC,MAEAqB,EAAsBrB,EAAtBqB,UAAWC,EAAWtB,EAAXsB,OAEnB,OAEE,aADA,CACA,WAAS5B,UAAU,YAAnB,SACG2B,EACC,qBAAK3B,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACG4B,EAAOb,KAAI,SAAC8B,GAAD,OACV,cAAC,EAAD,CACExB,GAAIwB,EAAMxB,GAEVb,KAAMqC,EAAMrC,KACZC,MAAOoC,EAAMpC,MACbC,QAASmC,EAAMnC,QACfC,OAAQkC,EAAMC,mBACdlC,OAAQiC,EAAMjC,QALTiC,EAAMxB,YCGV0B,MAff,WACE,OACE,mCACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWR,MAE1C,cAAC,IAAD,CAAOM,KAAK,SAASE,UAAWtD,IAChC,cAAC,IAAD,CAAOoD,KAAK,aAAaE,UAAWjD,UChB5CkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f64ca001.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Steadily, Silently”\r\n      </span>\r\n      <span>- Kwak bs, 2021</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Detail.css\";\r\n\r\nconst Detail = ({ location, history }) => {\r\n  const check = () => {\r\n    // 클릭해서 들어오는 것이 아닌 검색해서 들어온다면\r\n    // 클릭을 안했으면 state는 undefined임.\r\n    if (location.state === undefined) {\r\n      // home으로 redirect\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  useEffect(check);\r\n\r\n  // 클릭해서 들어오면 잘 보여주고\r\n  // 새로고침하면 다시 redirect\r\n  if (location.state) {\r\n    const { year, title, summary, poster, genres } = location.state;\r\n    //console.log(year, title, summary, poster, genres);\r\n    //console.log(summary.length);\r\n\r\n    return (\r\n      <div className=\"detail\">\r\n        <img src={poster} alt={title} title={title} />\r\n\r\n        <div className=\"detail__date\">\r\n          <h3 className=\"detail__title\">{title}</h3>\r\n          <h5 className=\"detail__year\">{year}</h5>\r\n          <ul className=\"detail__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"detail__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"detail__summary\">{summary}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\n// a href 는 html이므로 홈페이지를 새로 고침 시킴\r\n// Link는 새로고침 안시킴\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: `/movie/${id}`,\r\n          state: {\r\n            year,\r\n            title,\r\n            summary,\r\n            poster,\r\n            genres,\r\n          },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__date\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => (\r\n              <li key={index} className=\"genres__genre\">\r\n                {genre}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <p className=\"movie__summary\">{summary.length > 180 ? `${summary.slice(0, 180)}...` : summary}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\n// props 타입 정의\r\n// propsTypes는 number, string, bool, func, node등 다양하게 존재한다.\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\n// export를 해줘야 다른 js에서 Movie라는 Componenet를 사용할 수 있다.\r\nexport default Movie;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst MovieContext = createContext({\r\n  state: {\r\n    isLoading: true,\r\n    movies: [],\r\n  },\r\n});\r\n\r\nconst MovieProvider = ({ children }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // componentDidmount, componentDidupdate시 실행\r\n  useEffect(() => {\r\n    async function fetchMyAPI() {\r\n      // data - data - movies에 접근 (변수도 movies로 접근 하면 잘 출력됨)\r\n      const {\r\n        data: {\r\n          data: { movies },\r\n        },\r\n      } = await axios.get(\r\n        \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\r\n      );\r\n      // API로 받아온 movies가 잘 출력됨.\r\n      //console.log(movies);\r\n      setIsLoading(false);\r\n      setMovies(movies);\r\n    }\r\n    fetchMyAPI();\r\n  }, []); // 여기서 movies 넣어주면 useContext로 movies 가져올때 무한 루프 빠짐\r\n// 빈 배열이면 Didmount 한번만 실행.\r\n  const value = {\r\n    state: { movies, isLoading },\r\n  };\r\n  return (\r\n    <MovieContext.Provider value={value}>{children}</MovieContext.Provider>\r\n  );\r\n};\r\n\r\nconst { Consumer: MovieConsumer } = MovieContext;\r\n\r\nexport { MovieConsumer, MovieProvider };\r\n\r\nexport default MovieContext;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\nimport Context from \"../movieProvider\";\r\n\r\nconst Home = () => {\r\n  const { state } = useContext(Context);\r\n  //console.log(state);\r\n  const { isLoading, movies } = state;\r\n  //console.log(movies);\r\n  return (\r\n    // section 태그는 내용적 흐름과 구조를 만들기 위해 내용을 나누는 용도.\r\n    <section className=\"container\">\r\n      {isLoading ? (\r\n        <div className=\"loader\">\r\n          <span className=\"loader__text\">Loading...</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"movies\">\r\n          {movies.map((movie) => (\r\n            <Movie\r\n              id={movie.id}\r\n              key={movie.id}\r\n              year={movie.year}\r\n              title={movie.title}\r\n              summary={movie.summary}\r\n              poster={movie.medium_cover_image}\r\n              genres={movie.genres}\r\n            />\r\n            // 위와 같이 object를 풀어줄 때 map함수를 사용하고, 또\r\n            // jsx에서는 props를 통해서 값을 전달한다.\r\n            // key는 표현되지 않지만 필수 props이다.\r\n          ))}\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Detail from \"./routes/Detail.jsx\";\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./routes/Home.jsx\";\nimport { MovieProvider } from \"./movieProvider\";\n\n//네비게이션은 라우터 안에 위치하고 있어야됨\n// HashRouter가 github page에 좀 더 잘 연동됨.\n// BrowserRouter는 github page에 설정하기 좀 짜증남.\nfunction App() {\n  return (\n    <>\n      <HashRouter>\n        <Navigation />\n        <MovieProvider>\n          <Route path=\"/\" exact={true} component={Home} />\n        </MovieProvider>\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/movie/:id\" component={Detail} />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}